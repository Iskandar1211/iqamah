import { LinearGradient } from 'expo-linear-gradient';
import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { ActivityIndicator, Card, useTheme } from 'react-native-paper';

interface Hadith {
  text: string;
  narrator: string;
  source: string;
}

const hadiths: Hadith[] = [
  {
    text: '–ü–æ–∏—Å—Ç–∏–Ω–µ, –ê–ª–ª–∞—Ö –Ω–µ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≤–∞—à–∏ —Ç–µ–ª–∞ –∏ –≤–∞—à–∏ –æ–±–ª–∏–∫–∏, –Ω–æ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≤–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –∏ –≤–∞—à–∏ –¥–µ–ª–∞.',
    narrator: '–ê–±—É –•—É—Ä–∞–π—Ä–∞',
    source: '–°–∞—Ö–∏—Ö –ú—É—Å–ª–∏–º',
  },
  {
    text: '–í–µ—Ä–∞ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π, –ø–æ–∫–∞ –æ–Ω –Ω–µ –ø–æ–∂–µ–ª–∞–µ—Ç —Å–≤–æ–µ–º—É –±—Ä–∞—Ç—É —Ç–æ–≥–æ –∂–µ, —á–µ–≥–æ –∂–µ–ª–∞–µ—Ç —Å–µ–±–µ.',
    narrator: '–ê–Ω-–ù—É–º–∞–Ω –∏–±–Ω –ë–∞—à–∏—Ä',
    source: '–°–∞—Ö–∏—Ö –∞–ª—å-–ë—É—Ö–∞—Ä–∏',
  },
  {
    text: '–ö—Ç–æ –∏–∑ –≤–∞—Å —É–≤–∏–¥–∏—Ç –ø–æ—Ä–∏—Ü–∞–µ–º–æ–µ, –ø—É—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç —ç—Ç–æ —Å–≤–æ–µ–π —Ä—É–∫–æ–π, –∞ –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç, —Ç–æ —Å–≤–æ–∏–º —è–∑—ã–∫–æ–º, –∞ –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç, —Ç–æ —Å–≤–æ–∏–º —Å–µ—Ä–¥—Ü–µ–º, –∏ —ç—Ç–æ –±—É–¥–µ—Ç —Å–∞–º—ã–º —Å–ª–∞–±—ã–º –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ä—ã.',
    narrator: '–ê–±—É –°–∞–∏–¥ –∞–ª—å-–•—É–¥—Ä–∏',
    source: '–°–∞—Ö–∏—Ö –ú—É—Å–ª–∏–º',
  },
  {
    text: '–ü–æ–∏—Å—Ç–∏–Ω–µ, –ê–ª–ª–∞—Ö –ª—é–±–∏—Ç, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –∏–∑ –≤–∞—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–∞–∫–æ–µ-–ª–∏–±–æ –¥–µ–ª–æ, –æ–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç –µ–≥–æ —Ö–æ—Ä–æ—à–æ.',
    narrator: '–ê–∏—à–∞',
    source: '–ê–ª—å-–ë–∞–π—Ö–∞–∫–∏',
  },
  {
    text: '–ú—É—Å—É–ª—å–º–∞–Ω–∏–Ω - —ç—Ç–æ —Ç–æ—Ç, –æ—Ç —è–∑—ã–∫–∞ –∏ —Ä—É–∫ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Å—Ç—Ä–∞–¥–∞—é—Ç –¥—Ä—É–≥–∏–µ –º—É—Å—É–ª—å–º–∞–Ω–µ.',
    narrator: '–ê–±–¥—É–ª–ª–∞—Ö –∏–±–Ω –ê–º—Ä',
    source: '–°–∞—Ö–∏—Ö –∞–ª—å-–ë—É—Ö–∞—Ä–∏',
  },
  {
    text: '–ü–æ–∏—Å—Ç–∏–Ω–µ, –ê–ª–ª–∞—Ö –ø—Ä–æ—â–∞–µ—Ç –≥—Ä–µ—Ö–∏ –º–æ–µ–π –æ–±—â–∏–Ω–µ –∑–∞ –æ—à–∏–±–∫–∏, –∑–∞–±—ã–≤—á–∏–≤–æ—Å—Ç—å –∏ —Ç–æ, –∫ —á–µ–º—É –∏—Ö –ø—Ä–∏–Ω—É–¥–∏–ª–∏.',
    narrator: '–ò–±–Ω –ê–±–±–∞—Å',
    source: '–ò–±–Ω –ú–∞–¥–∂–∞',
  },
  {
    text: '–ö—Ç–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç –º–µ—á–µ—Ç—å —Ä–∞–¥–∏ –ê–ª–ª–∞—Ö–∞, —Ç–æ–º—É –ê–ª–ª–∞—Ö –ø–æ—Å—Ç—Ä–æ–∏—Ç –¥–æ–º –≤ –†–∞—é.',
    narrator: '–£—Å–º–∞–Ω –∏–±–Ω –ê—Ñ—Ñ–∞–Ω',
    source: '–°–∞—Ö–∏—Ö –∞–ª—å-–ë—É—Ö–∞—Ä–∏',
  },
  {
    text: '–ü–æ–∏—Å—Ç–∏–Ω–µ, –ê–ª–ª–∞—Ö –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–æ–ª–∏—Ç–≤—É –±–µ–∑ –æ–º–æ–≤–µ–Ω–∏—è.',
    narrator: '–ê–±—É –•—É—Ä–∞–π—Ä–∞',
    source: '–°–∞—Ö–∏—Ö –ú—É—Å–ª–∏–º',
  },
  {
    text: '–õ—É—á—à–∏–π –∏–∑ –≤–∞—Å —Ç–æ—Ç, –∫—Ç–æ –∏–∑—É—á–∞–µ—Ç –ö–æ—Ä–∞–Ω –∏ –æ–±—É—á–∞–µ—Ç –µ–º—É –¥—Ä—É–≥–∏—Ö.',
    narrator: '–£—Å–º–∞–Ω –∏–±–Ω –ê—Ñ—Ñ–∞–Ω',
    source: '–°–∞—Ö–∏—Ö –∞–ª—å-–ë—É—Ö–∞—Ä–∏',
  },
  {
    text: '–ü–æ–∏—Å—Ç–∏–Ω–µ, –ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ —á–∞—Å—Ç–æ –∫–∞–µ—Ç—Å—è, –∏ –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ –æ—á–∏—â–∞–µ—Ç—Å—è.',
    narrator: '–ê–±—É –•—É—Ä–∞–π—Ä–∞',
    source: '–ê—Ç-–¢–∏—Ä–º–∏–∑–∏',
  },
];

export const HadithCard: React.FC = () => {
  const theme = useTheme();
  const [hadith, setHadith] = useState<Hadith | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // –í—ã–±–∏—Ä–∞–µ–º —Ö–∞–¥–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    const today = new Date();
    const dayOfYear = Math.floor(
      (today.getTime() - new Date(today.getFullYear(), 0, 0).getTime()) /
        (1000 * 60 * 60 * 24)
    );
    const hadithIndex = dayOfYear % hadiths.length;

    setTimeout(() => {
      setHadith(hadiths[hadithIndex]);
      setLoading(false);
    }, 500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
  }, []);

  if (loading) {
    return (
      <View style={styles.cardContainer}>
        <Card style={[styles.card, { backgroundColor: theme.colors.surface }]}>
          <Card.Content style={styles.loadingContainer}>
            <ActivityIndicator size="small" color={theme.colors.primary} />
            <Text
              style={[
                styles.loadingText,
                { color: theme.colors.onSurfaceVariant },
              ]}
            >
              –ó–∞–≥—Ä—É–∑–∫–∞ —Ö–∞–¥–∏—Å–∞...
            </Text>
          </Card.Content>
        </Card>
      </View>
    );
  }

  if (!hadith) {
    return null;
  }

  return (
    <View style={styles.cardContainer}>
      <LinearGradient
        colors={[theme.colors.secondaryContainer, theme.colors.tertiaryContainer]}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 1 }}
        style={styles.gradientCard}
      >
        <View style={styles.content}>
          <View style={styles.header}>
            <Text style={[styles.title, { color: theme.colors.onSecondaryContainer }]}>
              üïå –•–∞–¥–∏—Å –¥–Ω—è
            </Text>
          </View>

          <Text style={[styles.hadithText, { color: theme.colors.onSecondaryContainer }]}>
            &ldquo;{hadith.text}&rdquo;
          </Text>

          <View style={styles.footer}>
            <Text
              style={[styles.narrator, { color: theme.colors.onSecondaryContainer }]}
            >
              –ü–µ—Ä–µ–¥–∞–ª: {hadith.narrator}
            </Text>
            <View style={[styles.sourceContainer, { backgroundColor: 'rgba(255, 255, 255, 0.2)' }]}>
              <Text style={[styles.source, { color: theme.colors.onSecondaryContainer }]}>
                {hadith.source}
              </Text>
            </View>
          </View>
        </View>
      </LinearGradient>
    </View>
  );
};

const styles = StyleSheet.create({
  cardContainer: {
    marginHorizontal: 16,
    marginVertical: 8,
    borderRadius: 20,
    elevation: 4,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.15,
    shadowRadius: 8,
  },
  gradientCard: {
    borderRadius: 20,
    padding: 24,
  },
  card: {
    borderRadius: 20,
    elevation: 4,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.15,
    shadowRadius: 8,
  },
  content: {
    flex: 1,
  },
  loadingContainer: {
    alignItems: 'center',
    paddingVertical: 20,
  },
  loadingText: {
    marginTop: 8,
    fontSize: 14,
  },
  header: {
    marginBottom: 16,
  },
  title: {
    fontSize: 18,
    fontWeight: '700',
    textAlign: 'center',
  },
  hadithText: {
    fontSize: 16,
    lineHeight: 24,
    fontStyle: 'italic',
    marginBottom: 20,
    textAlign: 'center',
    fontWeight: '500',
  },
  footer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  narrator: {
    fontSize: 13,
    fontStyle: 'italic',
    flex: 1,
    marginRight: 12,
  },
  sourceContainer: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 12,
  },
  source: {
    fontSize: 12,
    fontWeight: '700',
  },
});
